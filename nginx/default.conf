upstream client {
  server client:3000;
}
#the names of both api and client are in relation to what
# we named the files in docker-compose
upstream api {
  server api:5000;
}

server {
  listen 80;

  location / {
    # must be the name of what we called our connection in docker-compose --client
    proxy_pass http://client;
  }
  
  location /sockjs-node {
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $host;

    proxy_pass http://client;
    
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location /api {
    # rewriting is what chomps off the /api in our backend
    #this is a regex to match the api to the pathname
    # then take it off-- $1 is a reference to whatever is matched in the regex
    # break tells us not to write any other reqrite rules
    # incase nginx sometimes my try to rematch it to another url 
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}